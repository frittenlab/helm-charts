# Default values for vertical-pod-autoscaler

imagePullSecrets: []

nameOverride:
fullnameOverride:

commonLabels: {}

rbac:
  create: true

logLevel: 4

# Admission Controller: sets the correct resource requests on new pods (either just created or recreated by their controller due to Updater's activity)
admissionController:
  enabled: true

  image:
    repository: registry.k8s.io/autoscaling/vpa-admission-controller
    # Overrides the image tag whose default is the chart appVersion.
    tag:
    pullPolicy: IfNotPresent

  replicas: 1

  serviceAccount:
    create: true
    labels: {}
    annotations: {}
    name:

  service:
    annotations: {}

  serviceMonitor:
    enabled: false
    additionalLabels: {}
    endpointConfig: {}

  updateStrategy: {}

  podDisruptionBudget:
    enabled: false
    minAvailable:
    maxUnavailable:

  podLabels: {}

  podAnnotations: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534

  securityContext: {}

  priorityClassName:

  terminationGracePeriodSeconds:

  extraEnv: []

  extraArgs:
    # kube-api-burst: 10
    # kube-api-qps: 5
    # vpa-object-namespace: ""
    # webhook-timeout-seconds: 30

  livenessProbe:
    httpGet:
      path: /health-check
      port: http-metrics
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /health-check
      port: http-metrics
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10

  resources: {}

  nodeSelector: {}

  affinity: {}

  topologySpreadConstraints: []

  tolerations: []

  webhook:
    name: vpa-webhook-config

  certManager:
    enabled: false
    issuerKind: Issuer
    issuerName:

# Recommender: monitors the current and past resource consumption and, based on it, provides recommended values for the containers' cpu and memory requests
recommender:
  enabled: true

  image:
    repository: registry.k8s.io/autoscaling/vpa-recommender
    # Overrides the image tag whose default is the chart appVersion.
    tag:
    pullPolicy: IfNotPresent

  replicas: 1

  serviceAccount:
    create: true
    labels: {}
    annotations: {}
    name:

  service:
    annotations: {}

  serviceMonitor:
    enabled: false
    additionalLabels: {}
    endpointConfig: {}

  updateStrategy: {}

  podDisruptionBudget:
    enabled: false
    minAvailable:
    maxUnavailable:

  podLabels: {}

  podAnnotations: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534

  securityContext: {}

  priorityClassName:

  terminationGracePeriodSeconds:

  extraEnv: []

  extraArgs:
    # checkpoints-gc-interval: 10m0s
    # checkpoints-timeout: 1m0s
    # container-name-label: name
    # container-namespace-label: namespace
    # container-pod-name-label: pod_name
    # cpu-histogram-decay-half-life: 24h0m0s
    # cpu-integer-post-processor-enabled: false
    # history-length: 8d
    # history-resolution: 1h
    # kube-api-burst: 10
    # kube-api-qps: 5
    # memory-aggregation-interval: 24h0m0s
    # memory-aggregation-interval-count: 8
    # memory-histogram-decay-half-life: 24h0m0s
    # memory-saver: false
    # metric-for-pod-labels: up{job="kubernetes-pods"}
    # min-checkpoints: 10
    # oom-bump-up-ratio: 1.2
    # oom-min-bump-up-bytes: 104857600
    # pod-label-prefix: pod_label_
    # pod-name-label: kubernetes_pod_name
    # pod-namespace-label: kubernetes_namespace
    # pod-recommendation-min-cpu-millicores: 25
    # pod-recommendation-min-memory-mb: 250
    # prometheus-address: ""
    # prometheus-cadvisor-job-name: kubernetes-cadvisor
    # prometheus-query-timeout: 5m
    # recommendation-margin-fraction: 0.15
    # recommender-interval: 1m0s
    # recommender-name: default
    # storage: checkpoint
    # target-cpu-percentile: 0.9
    # vpa-object-namespace: ""

  livenessProbe:
    httpGet:
      path: /health-check
      port: http-metrics
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /health-check
      port: http-metrics
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10

  resources: {}

  nodeSelector: {}

  affinity: {}

  topologySpreadConstraints: []

  tolerations: []

# Updater: checks which of the managed pods have correct resources set and, if not, kills them so that they can be recreated by their controllers with the updated requests
updater:
  enabled: true

  image:
    repository: registry.k8s.io/autoscaling/vpa-updater
    # Overrides the image tag whose default is the chart appVersion.
    tag:
    pullPolicy: IfNotPresent

  replicas: 1

  serviceAccount:
    create: true
    labels: {}
    annotations: {}
    name:

  service:
    annotations: {}

  serviceMonitor:
    enabled: false
    additionalLabels: {}
    endpointConfig: {}

  updateStrategy: {}

  podDisruptionBudget:
    enabled: false
    minAvailable:
    maxUnavailable:

  podLabels: {}

  podAnnotations: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534

  securityContext: {}

  priorityClassName:

  terminationGracePeriodSeconds:

  extraEnv: []

  extraArgs:
    # evict-after-oom-threshold: 10m0s
    # eviction-rate-burst: 1
    # eviction-rate-limit: -1
    # eviction-tolerance: 0.5
    # in-recommendation-bounds-eviction-lifetime-threshold: 12h0m0s
    # kube-api-burst: 10
    # kube-api-qps: 5
    # min-replicas: 2
    # pod-update-threshold: 0.1
    # updater-interval: 1m0s
    # use-admission-controller-status: true

  livenessProbe:
    httpGet:
      path: /health-check
      port: http-metrics
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /health-check
      port: http-metrics
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10

  resources: {}

  nodeSelector: {}

  affinity: {}

  topologySpreadConstraints: []

  tolerations: []
